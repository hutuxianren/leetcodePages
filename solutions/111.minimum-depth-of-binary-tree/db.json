{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n * 结题思路：和找最大距离不同之处在于：找最小距离要注意(l<r)? l+1:r+1的区别应用，因为可能存在左右子树为空的情况，此时值就为0，但显然值是不为0的（只有当二叉树为空才为0），所以，在这里注意一下即可！\r\n */\r\nclass Solution {\r\npublic:\r\n    int minDepth(TreeNode* root) {\r\n        if(root==NULL) return 0;\r\n        int left=minDepth(root->left);\r\n        int right=minDepth(root->right);\r\n        if(!left) return right+1;\r\n        if(!right) return left+1;\r\n        return left>right?right+1:left+1;\r\n    }\r\n};"}