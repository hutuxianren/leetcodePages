{"c++":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\nvector<vector<int> > res;\r\n\r\nvoid DFS(TreeNode* root, int level)\r\n{\r\n    if (root == NULL) return;\r\n    if (level >= res.size()) // The level does not exist in output\r\n    {\r\n        res.push_back(vector<int>()); // Create a new level\r\n    }\r\n    \r\n    res[level].push_back(root->val); // Add the current value to its level\r\n    DFS(root->left, level+1); // Go to the next level\r\n    DFS(root->right,level+1);\r\n}\r\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\r\n            DFS(root, 0);\r\n    return vector<vector<int> > (res.rbegin(), res.rend());\r\n    }\r\n};"}